
from collections import deque
n, m, v = map(int,input().split())
graph = [[0] * (n+1) for i in range(n+1)]
check = [0] * (n+1)

for i in range(m):
  x,y = map(int,input().split())
  graph[x][y] = graph[y][x] = 1

def dfs(v):
  check[v] = 1
  print(v, end=' ')
  for i in range(n+1):
    if(check[i] == 0 and graph[v][i] == 1):
      dfs(i)

def bfs(v):
  queue = deque()
  queue = [v]
  check[v] = 0
  while queue:
    v = queue.pop(0)
    print(v, end = ' ')
    for i in range(n+1):
      if(check[i] == 1 and graph[v][i] == 1):
        queue.append(i)
        check[i] = 0
dfs(v)
print()
bfs(v)