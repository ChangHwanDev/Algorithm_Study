자바,spring 면접질문

1))java 프로그램 실행 과정에 대해 말해보시오.
1.java 컴파일러가(javac) java 소스코드(.java)를 읽어들여 class파일 즉 바이트코드(.class)로 변환시킨다.
2.class loader를 통해 .class파일들을 jvm으로 로딩한다.
3.(로딩된 class 파일들은 execution(실행) engine을 통해 해석되며 )클래스 로딩이 끝나면 jvm은 main메소드를 찾아 지역변수,객체변수,참조변수를 스택에 쌓는다.
4.해석된 클래스파일은 runtime data area에 배치되어 실질적인 명령어 수행이 이루어지게된다.
5.위와 같은 과정속에서 jvm은 필요에 따라 gc같은 관리 작업을 수행한다.

2))자바의 특징에 대해 말해보시오
1.oop 객체지향 언어
  부품에 해당하는 객체를 먼저 만들고 , 객체를 조립해 프로그램 전체를 완성해 나가는 기법

2.gc에 의한 메모리 자동 관리

3.멀티 스레드를 지원한다.
   하나의 프로세스 내에서 둘 이상의 스레드가 동시에 작업을 수행하는 것
4.다양한 open 라이브러리들이 존재한다.

5.jvm위에서 동작하기 때문에 특정 os에 종속적이지 않고 이식성이 좋으며 보안성이 좋다.
3))변수란
 하나의 값을 저장할 수 있는 메모리 공간

4))객체와 클래스의 차이점에 대해 설명하시오
 클래스란 실세계에 존재하는 어떤것의 속성과 동작을 추려내 필드와 메소드로 정의한 것 

객체란 클래스라는 설계도를 기반으로 구현한 실체입니다

5))객체지향의 특징을 말해보시오 
  1.캡슐화
   외부객체에서 구현방식을 알 수 없도록 숨기고 getter와    setter메서드를 통해 접근하도록 하는 방식

  2.상속
   부모 클래스의 변수와 메소드를 자식 클래스가 물려받아 그대로 사용가능한 것

  3.다형성
한 타입의 참조변수로 여러 타입의 객체를 참조 할 수 있는 것

오버라이딩(ride 올라타다 , 재정의한다)
 부모의 클래스를 상속받은 자식클래스가 부모의 메서드를 재정의하는 방식
오버로딩(load 적재하다 중복 정의하다)
 메서드명은 동일하지만, 매개 변수 타입과 개수를 다르게 해 선언하는 방식

6))자바의 메모리 영역에 대해에 설명하시오
 1.메서드(static) 영역
  클래스 , 클래스변수를 저장하는 공간
 2.스택 영역
  메소드 지역변수 매개변수를 저장하는 공간,객체 주소저장
 3.힙 영역
  객체와 인스턴스를 저장하는 공간


7))자바의 변수에 대해 설명하시오
 지역변수
  메서드 내에서 사용하며 메소드가 종료되면 이 변수를 사라 진다
 전역변수
  전역에서 사용가능하며 어디서든 이 변수를 사용할 수 있다.
 멤버변수
 같은 class 안에서 사용가능한 변수
 1.class 변수
 클래스 내에서 static을 붙여서 선언한 단 하나의 상수
 2.인스턴스 변수
 클래스 내에서 static을 붙이지 않은 변수

8))추상메서드와 추상클래스에 대해 설명하시오
 추상메서드란 정의부만 있고 구현부는 있지 않은 메서드입니다
 추상클래스는 하나이상의 추상메서드를 가진 클래스입니다.

9))인터페이스란 무엇인가
 모든 메서드가 구현부가 없는 추상메서드로 이루어진 클래스로 abstract 키워드를 붙이지 않아도 자동으로 모든 메서드는 추상메소드로 정의가 된다.

10))인터페이스를 사용하는 이유는 무엇인가
공동작업시 개발자들이 각각의 부분을 완성할 때 까지 기다리지 않고 서로 규약만 정해두어 각자의 부분만 따로 나눠서 작업할 수 있으며 
클래스의 기본틀을 제공하여 개발자들에게 정형화된 개발을 강요할 수 있습니다.

11))추상클래스와 인터페이스의 차이는 무엇인가
 추상클래스는 클래스를 상속받고 다른기능을 추가할 때 사용하며 인스턴스는 관계없는 클래스들이 같은 작업을 해야하지만 다르게 구현해야할 때 사용합니다.ex)울음소리라는 작업을 개발해야하지만 강아지는 멍멍, 닭은 꼬끼오 라고 울도록 구현
추상클래스는 일반 메서드를 사용할 수 있지만 인터페이스는 메서드 선언만 가능

12))컬렉션 프레임워크에 대해 아는만큼 말해보시오
1.list
배열과 유사하되 추가할때마다 자동으로 boundary를 늘려주는 구조로 중복된 데이터를 허용하며 ,순서가 존재함

 arraylist
  배열로 구현됬으며,인접해있기 때문에 데이터 조회에 매우 빠르다 하지만 빈번한 삽입 ,삭제시 새로 배열을 만들고 데이터를 옮겨야 하기 때문에 linkedlist보다 속도가 느림

 linkedlist
  링크 구조로 되어 있기 때문에 조회는 arraylist보다 느리지만 삽입 삭제시 링크를 끊고 이전링크와 다음링크만 변경해주면 되기에 삽입 삭제시 유리하다

2.set
 집합처럼 중복된 데이터를 허용하지 않으며 순서가 없다 

3.map
 key와 value쌍으로 데이터를 저장하며,key는 중복될 수 없고 value는 중복 저장이 가능함

13))프로세스와 스레드의 차이점에 대해 아는가?
 프로세스는 os가 메모리등의 자원을 할당해준 실행중인 프로그램이고 스레드는 그 프로세스에서 실행되는 각각의 일




14)) 쿠키와 세션의 공통점과 차이점은
 공통점은 둘다 사용자의 데이터를 저장합니다 차이점은 쿠키는 client 컴퓨터에 저장했다 서버 요청시 네트워크를 타고 서버로 전달되기 때문에 보안에 취약합니다 세션과 같은 경우 서버에서 저장되며 브라우저 단위로 관리(브라우저 종료시 제거)가 이루어져 캐시에 비해 보안성이 좋습니다

15))request 전송 방식에서는 어떤 것들이 있나요
 get방식(http 프로토콜 패킷 헤더에 데이터를 넣음)
 url의 쿼리문자열에 데이터를 같이 전달하는 방식으로 데이터 길이에 제한이있으며 보안에 취약하다

 post방식
 http 프로토콜 패킷 바디에 데이터를 넣어 보내기 때문에 보안에 조금 더 유리하고 데이터 길이에 제한이 없다. 하지만 get에 비해 다소 느리다

 delete방식 
 restful에서 삭제기능을 할 때 주로 사용된다.

 put/push방식
 restful에서 수정 작업을 할 때 주로 사용된다.

16))restful 이란?
 해당 url만 보더라도 바로 어떤 작업을 하는지를 알 수 있도록 하나의 데이터는 하나의 url을 갖도록 작업하는 방식

17))spring에서 di란 무엇인지 아시나요?
di란 기존 개발코드 부분에서 객체를 생성하는 것이 아닌 별도의 공간에서 객체를 생성하고 데이터간의 의존성을 주입해 개발코드에서는 이를 가져다 씀으로써 의존성을 줄이는 방식입니다.

객체를 개발자가 직접생성할 필요가없기 때문에 코드수정이 쉽고 재사용성이 좋습니다.

18))spring에서 aop란?
 프로그래밍을 하다보면 공통된 기능들이 많이 발생한다. aop는 이러한 공통기능들과 비즈니스 로직을 분리하여 실행시 비즈니스 로직의 앞 , 뒤 원하는 지점에 분리한 공통기능들을 수행 할 수 있게 함으로써 중복 코드를 줄일 수 있는 방식입니다.

19))spring filter와 interceptor의 차이
 필터와 인터셉터는 실행되는 시점에 차이가 있습니다 필터는 dispatherservlet 전에 실행되며 인터셉터는 dispatherservlet 후에 실행됩니다

20))spring mvc동작과정
1.클라이언트가 서버에 어떤 요청을 한다면 스프링에서 제공하는 디스패처서블릿이라는 클래스가 요청을 가로챕니다
2.디스패처 서블릿은 핸들러매핑에게 어떤 컨트럴로에게 요청을 위함하면 좋을지 물어봅니다
3.요청에 매핑된 컨트롤러가 있다면 requestmapping을 통해 요청을 처리할 메서드에 도달합니다
4.컨트롤러에서는 해당 요청을 처리할 service를 주입받습니다
5.service에서는 요청에 필요한 작업을 담당하며 데이터베이스에 접근이 필요하면 dao를 주입받습니다
6.dao는 mybatis설정을 이용해서 쿼리를 날려 db에서 데이터를 받아 service에게 다시 돌려줍니다
7.모든 비즈니스 로직을 끝낸 service가 결과물을 컨트롤러에게 넘깁니다
8.결과물을 받은 컨트롤러는 어떤 view파일을 보여줄것인지 정보를 담아 디스패처서블릿에게 보냅니다.
9.디스패처서블릿은 뷰리졸버에게 받은 뷰 name을 넘깁니다
10.뷰리졸버는 해당jsp를 찾아 디스패처서블릿에게 알려줍니다 
11.디스패처 서블릿은 뷰를 통해 해당 jsp를 제작하여 클라이언트에게 전송

21))mvc 패턴이란?
data처리와 접근을 담당하는 model과 client에게 보여지는 화면을 담당하는 view model과 view를 제어하는 controller 총 3가지 부분으로 나누어 데이터와 화면간의 의존관계를 벗어날 수 있게하는 개발 기법입니다.

22))servlet ,jsp 차이를 말하시오
servlet은 자바 언어로 웹 개발을 위해 만들어진 것으로 
java코드안에 html 태그가 삽입되어있으며 jsp는 html을 코딩하기 너무 어렵고 불편해 html내부에 java코드를 삽입하는 형식이다

23))database에서 index란
table에 대한 동작 속도를 높여주는 자료구조로써 빠른 검색을 가능하게 해준다.
pk는 index키로 잡히게 되고 테이블 조인시 full table조인을 하지않고 바로 index키 값을 찾아가서 조회 속도가 빠름

24))git 이란 무엇인가?

25))wrapper class 사용이유
wrapper class는 기본자료형에 대한 클래스 표현이며 매개변수로 객체가 요구될 때,객체간의 비교가 필요할 때 사용합니다

26))정규형
제1 정규형 테이블의 속성에 중복된 데이터를 제거한다
제2정규형 부분함수적 종속을 제거해서 완전 함수적 종속 상태로 만든다(기본키의 일부속성에 종속된 속성을 찾아 제거한다)
제3정규형 이행적 함수적 종속 제거 기본키가 아닌 속성들중에서 종속관계가 있는 속성을 찾아 제거한다

27))gc
heap 메모리 영역에 생성된 객체들 중에 참조되지 않는 객체들을 탐색 후 제거하는 역할을 수행한다.





28))조인selft조인 같은 테이블을 두 번 이상 조인하는것
inner조인 연결한 두 테이블에 같은 데이터가 있는 것만 출력하고 싶을때 사용(null값 x)일반적 조인
outer조인 데이터가 없는 것도 출력하고 싶다면 other join사용(null값 포함)
left oter조인 왼쪽에 있는 테이블모든 레코드와 오른쪽 테이블에 같은 레코드를 가져옴
right는 그반대

29))uri url차이
uri은 인터넷 상의 자원을 식별하기 위한 문자열의 구성이고
url은 인터넷 상의 자원 위치를 나타냅니다

30))api와 라이브러리차이
api  인터페이스 역할을 수행하는 함수들의 모음입니다
이함수를 사용하면 지도의 위치데이터를 가져올 수 있다 와 같은 명세가 포함된 함수 
그리고 이 api를 통해 라이브러리를 사용할 수 있음
라이브러리란 개발자들이 자주사용하는 클래스들의 모음

31))ioc컨테이너란?
ioc 컨테이너는 개발자가 xml이나 java코드에 설정한 정보를 토대로 pojo클래스를 가지고 객체를 만든후 그 객체를 사용할 수 있도록 주소값을 간환해주는 역활을 함
beanfactory와 applicationcontext 두개가 ioc컨테이너임

ioc
일반적인 프로그램은 코드의 전체적인 흐름을 개발자가 결정하는데 ioc 개발방식은 개발자가 몇가지 설정만하고 프로그램의 흐름은 프레임워크가 제어하는방식이다

32))jdbc란?
 java가 db와 통신할 수 있게 해주는 api

33))pojo란?
특정 인터페이스 , 클래스에 상속되지 않는 순수 자바객체 

34))dao란
data access object 로 데이터베이스의 데이터에 접근하기 위한 객체입니다 또한 데이터베이스에 접근을 하기위한 로직과 비즈니스 로직을 분리하기 위해 사용합니다 (데이터베이스 접근만을 위한 객체)

35))dto란
dto (data tansfer  object) service controller 등 계층간의 데이터를 주고받기 위해 사용하는 객체입니다





36))프레임워크란?
개발자가 특정 프로그램을 개발할때 기본적인 설계도와 틀을 제공받아 좀 더 수월하고 편리하게 개발할 수 있도록 도와주는 프로그램입니다.

37))was와 웹서버의 차이는?
웹서버는 정적인 요청에 응답하고 was는 동적인 요청에 응답해줍니다 아파치가 웹서버이고 톰캣이 was입니다

38))데이터베이스에서 index란
테이블 내의 1개 또는 여러개의 컬럼을 이용하여 인덱스를 생성하여 자료 검색시 인덱스만을 검색하여 동작 속도를 높여주는 자료구조입니다 
테이블 검색에는 full table scan , index scan 두가지가 있음

39))싱글톤 디자인 패턴이란클래스 인스턴스가 하나만 만들어지도록 하는 디자인 패턴

40))servlet과 jsp
servlet은 container가 이해할 수 있게 구성된 순수 자바 코드로만 이루어진 것
jsp html기반에 java코드를 삽입한 것

41))call by value, call by reference
call by value 함수에서 값을 복사해서 전달하는방식
call by reference 함수에서 값이 아닌 주소값을 전달하는 방식

42))static
클래스가 로딩될 때 , 메모리 공간을 할당하는데 처음 설정된 메모리 공간이 변하지 않는 것을 의미합니다
객체를 아무리 많이 만들어도 static변수는 하나만 존재합니다.

43))primitive type 변수에 값 자체를 저장
reference type 메모리 상에 객체가 있는 위치를 저장

44))프로세스 스레드 프로그램
프로그램 명령어들의 집합
프로세스 현재 실행중인 프로그램
운영체제의 커널이 실행할 프로그램을 주기억장치로 옮겨서 프로세스로 만들어줌
스레드는 프로세스의 실행 단위

45))람다식 
인터페이스를 사용할 때 객체를 생성할 필요없이 인터페이스의 메소드에 파라미터와 실행문을 정의해 바로 결과물을 도출 할 수 있는 방식(메서드를 하나의 식으료 표현한 것)
1. 코드를 간결하게 만들 수 있습니다.
2. 코드가 간결하고 식에 개발자의 의도가 명확히 드러나므로 가독성이 향상됩니다.
46))spring framework
오늘날 가장 많이 사용하는 ajva기반 응용 프로그램 개발 프레임 워크

47))
DDL, DML, DCL에 대해 설명해보세요.    - DDL : Data Define Language 의 약자로, 스키마/도메인/테이블/뷰/인덱스를 정의/변경/제거할 때 사용하는 언어이다.              테이블을 생성하고, 테이블 내용을 변경하고, 테이블을 없애버리는 것.               흔히 CREATE, ALTER, DROP 을 떠올리면 된다.      - DML : Data Manipulation Language 의 약자로, Query(질의)를 통해서 저장된 데이터를 실질적으로 관리하는 데 사용한다.              테이블 안의 데이터 하나하나를 추가하고 삭제하고 수정하는 것.              흔히 INSERT, DELETE, UPDATE 를 떠올리면 된다.      - DCL : Data Control Language 의 약자로, 보안/무결성/회복/병행 제어 등을 정의하는데 사용한다. 데이터 관리 목적.              흔히 COMMIT, ROLLBACK, GRANT, REVOKE 를 떠올리면 된다.  

객체 인스턴스 차이
클래스의 타입으로 선언되었을 때 객체라고 부르고, 그 객체가 메모리에 할당되어 실제 사용될 때 인스턴스라고 부른다.

view 
select 한 결과물을 객체 즉 테이블로 만드는 기법
이때 view는 실제 테이블이 아닌 가상의 테이블입니다.